# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
#
#Plain Text: .text.plain
#HTML: .text.html.basic
#CSS: .source.css
#Sass: .source.sass
#LESS: .source.css.less
#JavaScript: .source.js
#PHP: .text.html.php
#Python: .source.python
#Java: .source.java

 ######  complete  example of snippets ####################




##### ------------ CSS Snippet --------------------------

'.source.css':
   'V-Align Div':
     'prefix': 'css__align-vdiv'
     'body': """
        div.btn-wrap {
          position: relative;
          display: block;
          text-align: center;
          width: 100%;
        }
       """
     'description': 'CSS vertically aligns an element inside div'
   'H-Align Flex':
     'prefix': 'css__align-flex'
     'body': """
        div.img-wrap {
          flex: 0 1 auto;
          display: flex;
          flex-direction: column
        }
       """
     'description': 'CSS horizontally aligns an image inside div using flex'
   'H-Align Element':
     'prefix': 'css__align-elem'
     'body': """
          /* element insider wrapper */
          .elementor-navigation ul {
              list-style: none;
              margin: 0;
              display: inline-block;
              width: 1140px;
              text-align: left;
          }
          /* div or nav wrapper */
          nav#elementor-navigation {
            margin: 0 auto;
            text-align: center;
          }
       """
     'description': 'CSS horizontally aligns any element. This is a Navigation Menu example'
   'V-Align Any Elem':
     'prefix': 'css__align-vae'
     'body': """
      $0 .element {
        position: relative;
        top: 50%;
        transform: translateY(-50%);
      }
       """
     'description': 'CSS vertically aligns any Element'
   'V-Align Element Table':
     'prefix': 'css__align-vtc'
     'body': """
      $0 .element {
        display: table-cell;
        vertical-align: middle;
        position: relative;
      }
       """
     'description': 'CSS vertically aligns element using Table'
   'Flex Sample One':
     'prefix': 'css__flex1'
     'body': """
     //add to the div container of all images wrapper
      $0 .site-branding {
        display: flex;
        flex-direction: row;
        flex: 1 0 auto;
        min-height: 65px;
        justify-content: center;
        text-align:center;
      }
      // for even spacing add next to image div.wrapper
      .ngg-gallery-thumbnail-box {
        margin: 0 auto;
      }
       """
     'description': 'A sample #1 of using flex'
   'Smooth Font':
     'prefix': 'css__smotf'
     'body': """
      $0 .element {
            -webkit-font-smoothing: antialiased;
            text-rendering: optimizeLegibility;
          }
       """
     'description': 'CSS smoothing font'
   'CSS Pseudo Elem':
     'prefix': 'css__psuedo_elem'
     'body': """
        p:after {
          position: absolute;
          left: 50%;
          bottom: 0;
          width: 115px;
          height: 1px;
          margin: 0 0 0 -25px;
          background: #120f90;
          content: "-**-";
          color: red;
          text-align: center;
              /* background-image: url(' . get_bloginfo('stylesheet_directory') . '/images/custom-logo.png) !important; */
              /* background-position: 0 0; */
        }
        /* make sure <p> is relative followed by pseudo elem w/ "position: absolute"  */
        nova_menu_item:before {
            font-family: 'nova-font';
            content: '\e603';
            display: inline-block;
            width: 2rem;
            height: 2rem;
            margin-bottom: 1rem;
            line-height: 2rem;
            text-align: center;
            font-size: 1.38rem;
            border-width: 1px;
            border-style: solid;
            border-radius: 50%;
        }
        /*unicode sample*/
       """
     'description': 'CSS Before or After Pseudo Element Example & Unicode'
 	 'CSS Boxshadow':
     'prefix': 'css__boxsh'
     'body': """
        img:hover {
          box-shadow: 0.2rem 0.2rem 0.5rem 0.2rem rgba(0, 0, 0, 0.25);
        }
       """
     'description': 'My Box Shadow Setting for Images'
 	 'CSS Blockquote':
     'prefix': 'css__blockquote'
     'body': """
        div blockquote {
            font-size: 0.9em;
            background: hsla(210, 11%, 15%, 0.45);
            padding: 1em 1em 1em 3em;
            font-family: $font-fam2;
            margin: 0;
            text-align: left;
            &:before {
              display: block;
                  width: 38%;
                  height: 100%;
                  position: absolute;
                  top: -0.15em;
                  left: -0.30em;
                  content: "“";
                  font-weight: bolder;
                  font-size: 12em;
                  color: $color-blk;
                  font-weight: 400;
                  line-height: 100%;
                  border-bottom: none;
                  border-top: none;
            }
          }
       """
     'description': 'Blockquote CSS Styling'
 	 'CSS Padding color':
     'prefix': 'css__pad_gradient'
     'body': """
          div {
              padding:35px;
              background-image:linear-gradient(to bottom, rgb(71, 71, 71) 50%, rgb(158, 17, 17) 100%), linear-gradient(to bottom, rgb(167, 21, 21) 50%, rgb(0, 0, 0) 100%)
              background-clip: content-box, padding-box;
          }
          /* OR plain no gradient https://stackoverflow.com/questions/14628601/can-i-add-background-color-only-for-padding */
          header.entry-header {
              word-wrap: break-word;
              padding: 10px 0 10px 25px;
              background-color: #212529;
              position: relative;
              border: 2px solid green;
              z-index: 10;
          }

          header.entry-header:after {
              background-color: #ffc107;
              position: absolute;
              top: 0px;
              left: 0px;
              right: 30px;
              bottom: 0px;
              content: '';
              display: block;
              z-index: -1;
          }
       """
     'description': 'Color for content and padding gradient or plain color'
     'descriptionMoreURL': 'http://jsfiddle.net/TyXRY/639/'
 	 'CSS Align Image':
     'prefix': 'css__align_img'
     'body': """
        @media screen and (max-width: 649px) {
          div.ngg-galleryoverview {
            display: block !important;
            text-align: center;
            .ngg-gallery-thumbnail-box {
              float: none;
              display: inline-block;
              margin: auto;
            }
          }
        }
        /* note: use inline-block on a div container of <figure> and <img> to match height size */
       """
     'description': 'Aligns image to center & behaves like float: left with margin auto.'
     'descriptionMoreURL': 'http://jsfiddle.net/4xxvb/3/'
 	 'CSS sticky post':
     'prefix': 'css__sticky_p'
     'body': """
          #main>article {
              position: relative;
          }
          .sticky::before {
              position: absolute;
              content: "";
              display: block;
              width: 2em;
              height: 2em;
              background-color: lightgray;
              right: 0;
              top: 0;
              border-width: 0 2em 2em 0;
              border-color: #f8f9fa rgba(228, 226, 226, 0.5) #f8f9fa;
              border-style: solid;
              -webkit-box-shadow: -1px 2px 2px rgba(26, 26, 26, 0.1);
              box-shadow: -1px 2px 2px rgba(26, 26, 26, 0.1);
          }
       """
     'description': 'Sticky Post or blog'
 	 'CSS Embed Video Responsive':
     'prefix': 'css__video_resp'
     'body': """
          /* responsive embedded video */
          div.video-wrap {
            position: relative;
            padding-bottom: 10%;
            padding-top 10px;
            height: 0;
            overflow: hidden;
          }
          div.video-wrap iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100;
          }
       """
     'description': 'responsive embedded video inside an iframe.'
 	 'CSS Slider Gradient':
     'prefix': 'css__slider_gradient'
     'body': """
          /* this must be placed just before the <figure> of each slider <image> */
          .slick-slide:before {
              content: '';
              position: absolute;
              display: block;
              width: 100%;
              height: 24%;
              left: 0;
              bottom: -1px;
              z-index: 1;
              background: linear-gradient( transparent 40%, #1d2120 200% );
          }
       """
     'description': 'Slider Gradient for Adding Text in a footer using pseudo'
 	 'SASS Bootstrap4 Grid':
     'prefix': 'sass__b4_grid_media'
     'body': """
        /*b4 grid  >=  < 576 768 992 1200 */
        /* max-width */
        $query_b4_xs5_mx: 359px;
        $query_b4_xs_mx: 575px;
        $query_b4_sm_mx: 767px;
        $query_b4_md_mx: 991px;
        $query_b4_lg_mx: 1199px;

        /* min-width */
        $query_b4_xs5: 360px;
        $query_b4_sm: 576px;
        $query_b4_md: 768px;
        $query_b4_lg: 992px;
        $query_b4_xl: 1200px;

        @media screen and (min-width: 510px) {
        }
       """
     'description': 'SASS Bootstrap 4 Grid variables sizes'
     'descriptionMoreURL': 'http://jsfiddle.net/TyXRY/639/'
 	 'SASS Mixin Basic':
     'prefix': 'sass__mixin_b'
     'body': """
          // Background Cover Mixin
          @mixin background-cover {
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
          }

          // Rem output with px fallback
          @mixin font-size($sizeValue: 1) {
          	font-size: ($sizeValue * 20) * 1px;
          	font-size: $sizeValue * 1.25rem;
          }

          // Center block
          @mixin center-block {
          	display: block;
          	margin-left: auto;
          	margin-right: auto;
          }

          // Clearfix
          @mixin clearfix() {
          	content: "";
          	display: table;
          	table-layout: fixed;
          }

          // Clear after (not all clearfix need this also)
          @mixin clearfix-after() {
          	clear: both;
          }

          // font mixin script
          /* default */
          $font__main: sans-serif;
          $font__serif: 'PT Serif',Georgia,Cambria,"Times New Roman",Times,serif;
          $font__script: 'Kaushan Script', 'Helvetica Neue', Helvetica, Arial, cursive;
          $font__body-font: 'Roboto Slab', 'Helvetica Neue', Helvetica, Arial, sans-serif;
          $font__header-font: 'Source Sans Pro',"Lucida Grande","Lucida Sans Unicode","Lucida Sans",Geneva,Arial,sans-serif;

          @mixin font__script($font-set: false, $size: false, $colour: false, $weight: false,  $lh: false) {
              @if $font-set == false { font-family: $font-family; } @else {font-family: $font-set;};
          		@if $size == false { font-size: 1rem; } @else { font-size: $size+rem;}
              @if $colour == false { color: black; }  @else { color: $colour}
              @if $weight == false { font-weight: 300; }  @else { font-weight: $weight}
              @if $lh == false { line-height: 1.5; }  @else {line-height: $lh}
          }
       """
     'description': 'SASS Essential Mixin Basic'
     'descriptionMoreURL': 'https://engageinteractive.co.uk/blog/top-10-scss-mixins'
 ##### ------------ HTML Snippet --------------------------
 '.text.html.basic':
    'Widget Title':
      'prefix': 'wti'
      'body': '<h4 class="widget-title"></h4>'
    'Image Link':
      'prefix': 'iml'
      'body': """
        <figure>
          <a href="$1" target="_blank">
            <img src="$2" width="$3" height="$4" alt="$5">
            </a>
        </figure>
        """
      'description': 'Add an <figure> image with <a>'
      'descriptionMoreURL': 'http://hongkiat.com'

    ##------  BOOTSTRAP 4 SNIPPETS --------------------


###### ------------ PHP Snippet --------------------------
  '.text.html.php':
   ##------  WORDPRESS SNIPPETS --------------------
   'WP Remove Version #':
     'prefix': 'wp__rm_ver'
     'body': """
        //Remove WordPress Version Number
        function rbtm_remove_version() { return '';}
        add_filter('the_generator', 'rbtm_remove_version');
       """
     'description': 'Remove WordPress Version Number = the_generator'
     'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Add Custom Logo Admin':
     'prefix': 'wp__clogo_admin'
     'body': """
        //hook into the administrative header output & add a Custom Dashboard Logo
         add_action('wp_before_admin_bar_render', function() {
             echo '
                 <style type="text/css">
                 #wpadminbar #wp-admin-bar-wp-logo > .ab-item .ab-icon:before {
                 background-image: url(' . get_bloginfo('stylesheet_directory') . '/images/custom-logo.png) !important;
                 background-position: 0 0;
                 color:rgba(0, 0, 0, 0);
                 }
                 #wpadminbar #wp-admin-bar-wp-logo.hover > .ab-item .ab-icon {
                 background-position: 0 0;
                 }
                 </style>
             ';
         });
       """
     'description': 'Add a Custom Admin Dashboard Logo = wp_before_admin_bar_render'
     'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Admin Footer Text':
     'prefix': 'wp__ft_txt_admin'
     'body': """
         // https://developer.wordpress.org/reference/hooks/admin_footer_text/
          add_filter('admin_footer_text', function() {
              echo 'Fueled by <a href="http://www.wordpress.org" target="_blank">WordPress</a> | WordPress Tutorials: <a href="#" target="_blank">Webmacz</a></p>'; });
       """
     'description': 'Change the Footer in WordPress Admin Panel = admin_footer_text'
     'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Custom Dashboard Widget':
  	 'prefix': 'wp__cdash_widget'
  	 'body': """
        add_action('wp_dashboard_setup', 'my_custom_dashboard_widgets');

        function my_custom_dashboard_widgets() {
            global $wp_meta_boxes;
            wp_add_dashboard_widget('custom_help_widget', 'Theme Support', function() {
                echo '<p>Welcome to Custom Blog Theme! Need help? Contact the developer <a href="mailto:yourusername@gmail.com">here</a>. For WordPress Tutorials visit: <a href="#" target="_blank">Webmacz</a></p>';
            });
        }
  	   """
  	 'description': 'Add Custom Dashboard Widgets in WordPress = wp_dashboard_setup'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Change Gravatar':
  	 'prefix': 'wp__gravatar'
  	 'body': """
        add_filter( 'avatar_defaults', 'rbtm_new_gravatar' );
          function rbtm_new_gravatar ($avatar_defaults) {
          $myavatar = 'http://example.com/wp-content/uploads/2017/01/wpb-default-gravatar.png';
          $avatar_defaults[$myavatar] = "Default Gravatar";
          return $avatar_defaults;
        }
  	   """
  	 'description': 'Change the Default Gravatar in WordPress = avatar_defaults'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Footer Dynamic Copyright':
  	 'prefix': 'wp__ft_copyright'
  	 'body': """
        function rbtm_copyright()
        {   // NOTE: add to plugin or functions.php
            global $wpdb;
            $copyright_dates = $wpdb->get_results("
        			SELECT
        			YEAR(min(post_date_gmt)) AS firstdate,
        			YEAR(max(post_date_gmt)) AS lastdate
        			FROM
        			$wpdb->posts
        			WHERE
        			post_status = 'publish'
        		");
            $output = '';
            if ($copyright_dates) {
                $copyright = "© " . $copyright_dates[0]->firstdate;
                if ($copyright_dates[0]->firstdate != $copyright_dates[0]->lastdate) {
                    $copyright .= '-' . $copyright_dates[0]->lastdate;
                }
                $output = $copyright;
            }
            return $output;
        }
         echo rbtm_copyright(); // NOTE: add to footer.php
  	   """
  	 'description': 'This function looks - date of first post & date of last post.'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Change Background Color':
  	 'prefix': 'wp__bgcolor'
  	 'body': """
        function rbtm_bgcolor()
        {
            $rand = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f');
            $color ='#'.$rand[rand(0, 15)].$rand[rand(0, 15)].$rand[rand(0, 15)].$rand[rand(0, 15)].$rand[rand(0, 15)].$rand[rand(0, 15)];
            echo $color;
        }
        // edit header.php, Locate <body> & add replace
        //  <body <?php body_class(); ?> style="background-color: <?php // rbtm_bgcolor();?>">>
  	   """
  	 'description': 'Randomly Change Background Color in WordPress'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Update URLs':
  	 'prefix': 'wp__update_url'
  	 'body': """
        // add this to functions.php //  check http://site1.net/wp-admin/options.php
        update_option( 'siteurl', 'http://example.com' );
        update_option( 'home', 'http://example.com' );
        // Once logged in, Set the URLs in WP Settings. Then remove this code from functions.php, or will keep updating URLs when site is accessed.
  	   """
  	 'description': 'If you are unable to access admin area, then update WordPress URLs to fix it. '
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Add Image Sizes':
  	 'prefix': 'wp__add_img_size'
  	 'body': """
        add_image_size( 'sidebar-thumb', 120, 120, true ); // Hard Crop Mode
        add_image_size( 'homepage-thumb', 220, 180 ); // Soft Crop Mode
        add_image_size( 'singlepost-thumb', 590, 9999 ); // Unlimited Height Mode

        //You can display an image size in anywhere in your theme using this code.
        // the_post_thumbnail( 'homepage-thumb' );
  	   """
  	 'description': 'Add Additional Image Sizes in WordPress'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Add User Profile fields Admin':
   	 'prefix': 'wp__add_pfields_admin'
   	 'body': """
       function rbtm_new_contactmethods( $contactmethods ) {
         $contactmethods['twitter'] = 'Twitter'; // Add Twitter
         $contactmethods['facebook'] = 'Facebook'; //add Facebook
         return $contactmethods;
        }
      add_filter('user_contactmethods','rbtm_new_contactmethods',10,1);
      // see CODEX: wp_get_user_contact_methods($user)
      // <?php echo $curauth->twitter; ?> //  you can display fields in author template
   	   """
   	 'description': 'Add User (e.g. Author) Profile Fields in WP Admin = user_contactmethods'
   	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Widget Register Sidebar':
   	 'prefix': 'wp__reg_sb_widget'
   	 'body': """
       add_action( 'widgets_init', function() { // Register Sidebars
       $args = array(
           'id'            => 'custom_sidebar',
           'name'          => __( 'Custom Widget Area', 'text_domain' ),
           'description'   => __( 'A custom widget area', 'text_domain' ),
           'before_title'  => '<h3 class="widget-title">',
           'after_title'   => '</h3>',
           'before_widget' => '<aside id="%1$s" class="widget %2$s">',
           'after_widget'  => '</aside>',
       );
       register_sidebar( $args );
      });
      /*   // To display widget
      <?php if ( !function_exists('dynamic_sidebar') || !dynamic_sidebar('custom_sidebar') ) : ?>
      <!–Default sidebar info goes here–>
      <?php endif; ?>
      */
 	   """
   	 'description': 'Adding Widget Ready Areas or Sidebar in WordPress Themes = widgets_init'
   	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Change RSS in Post':
  	 'prefix': 'wp__rss_post'
  	 'body': """
     function rbtm_postrss($content) {
       if (is_feed()) {
           $content = 'This post was written by Raymacz '.$content.' Check Webmacz.ml';
       }
       return $content;
      }
      add_filter('the_excerpt_rss', 'rbtm_postrss');
      add_filter('the_content', 'rbtm_postrss');
  	   """
  	 'description': 'Manipulate RSS Feed Footer - adds advert in RSS Feeds below each post = the_excerpt_rss'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Featured Image to RSS':
  	 'prefix': 'wp__rss_fi'
  	 'body': """
       function rbtm_rss_post_thumbnail($content) {
           global $post;
           if (has_post_thumbnail($post->ID)) {
               $content = '<p>' . get_the_post_thumbnail($post->ID) .'</p>'. get_the_content();
         }
         return $content;
        }
        add_filter('the_excerpt_rss', 'rbtm_rss_post_thumbnail');
        add_filter('the_content_feed', 'rbtm_rss_post_thumbnail');
  	   """
  	 'description': 'Add Featured Images to RSS Feeds = the_excerpt_rss & the_content_feed'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Hide Login Error':
  	 'prefix': 'wp__he_login'
  	 'body': """
        add_filter( 'login_errors', function() {
         return 'Something is wrong!!!';
        });
  	   """
  	 'description': 'Hide Login Error Message in WordPress = login_errors'
  	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Remove Email Login':
     	 'prefix': 'wp__rm_emaillogin'
     	 'body': """
          // check default-filters.php to understand how remove filters work
          // also search where the function is located in the WP core
          // wp_authenticate_email_password() // wp_authenticate_username_password() // wp_authenticate
          remove_filter( 'authenticate', 'wp_authenticate_email_password', 20 );
     	   """
     	 'description': 'Disable Login by Email in WordPress & retain login by username = authenticate'
     	 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
     'WP Search Disabled':
   		 'prefix': 'wp__rm_srch'
   		 'body': """
         function fb_filter_query($query, $error = true)
          {
           if (is_search()) {
               $query->is_search = false;
               $query->query_vars[s] = false; // [s] initialize array w/ error input & produce false results
               $query->query[s] = false;
          // to error // check class-wp-query.php // $qqq = new WP_Query(); $qqq->is_search(); // $qqq->query_vars; // $qqq->query;
               if ($error == true) {
                   $query->is_404 = true;
               }
           }
          }

          add_action('parse_query', 'fb_filter_query');
          // add_filter('get_search_form', create_function('$a', "return null;"));
          add_filter('get_search_form', '__return_null');
   		   """
   		 'description': 'Disable Search Feature in WordPress = parse_query & get_search_form'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
     'WP Delay Post Feed':
   		 'prefix': 'wp__dlay_postfeed'
   		 'body': """
         function publish_later_on_feed($where) {
           global $wpdb; // to change delay time use: $wait, $device
           if ( is_feed() ) {
               // timestamp in WP-format
               $now = gmdate('Y-m-d H:i:s');
               // value for wait; + device
               $wait = '30'; // integer // default delay
               // http://dev.mysql.com/doc/refman/5.0/en/date-and-time-functions.html#function_timestampdiff
               $device = 'MINUTE'; //MINUTE, HOUR, DAY, WEEK, MONTH, YEAR
               // add SQL-sytax to default $where
               $where .= " AND TIMESTAMPDIFF($device, $wpdb->posts.post_date_gmt, '$now') > $wait ";
           }
           return $where;
          }

        add_filter('posts_where', 'publish_later_on_feed');

   		   """
   		 'description': 'Delay Posts in RSS Feed by filtering WHERE - database. = posts_where'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
     'WP Read More Excerpt Change':
      'prefix': 'wp__readmor'
      'body': """
        function modify_read_more_link() {
          return '<a class="more-link" href="' . get_permalink() . '">Your Read More Link Text</a>';
        }
        add_filter( 'the_content_more_link', 'modify_read_more_link' );
        """
      'description': 'Change Read More Text for Excerpts in WordPress = the_content_more_link'
      'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
    'WP Disable RSS':
  		 'prefix': 'wp__rss_da'
  		 'body': """
         function fb_disable_feed()
         {
             wp_die(__('No feed available,please visit our <a href="'. get_bloginfo('url') .'">homepage</a>!'));
         }

         add_action('do_feed', 'fb_disable_feed', 1);
         add_action('do_feed_rdf', 'fb_disable_feed', 1);
         add_action('do_feed_rss', 'fb_disable_feed', 1);
         add_action('do_feed_rss2', 'fb_disable_feed', 1);
         add_action('do_feed_atom', 'fb_disable_feed', 1);
  		   """
  		 'description': 'Disable RSS Feeds in WordPress = do_feed'
  		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Action Hook Sequence (simple)':
      'prefix': 'wp__hook_sequence'
      'body': """
        add_action( 'shutdown', function(){
            $ii=0;
            foreach( $GLOBALS['wp_actions'] as $action => $count )
                printf( '[%d] %s (%d) <br/>' . PHP_EOL, ++$ii, $action, $count  );
            // this stops depending on add_action hook being called forth, if you want the last hook - try 'shutdown'
        });
        // IMPORTANT NOTES:  //you can use the debug bar plugin / query monitor plugin
        // var_export - is similar to var_dump() but returns the deeper value (simple format)
        // $wp_filter - global var that returns all filter hooks. Also has values of all functions attached in a hook both filter & action.
        // $wp_actions - global var that returns all actions hooks but functions attached are excluded.
        """
      'description': ' Show action hook fired in sequence.'
   'WP Functions in a Hook (simple)':
      'prefix': 'wp__hook_getfunc'
      'body': """
          add_action( 'wp_footer', function() {
            global $wp_filter;
            echo "<pre>" . var_dump( $wp_filter['after_setup_theme'] ) . "</pre>";
            // echo "<pre>" . print_r($wp_filter, true) . "</pre>";
          });
        """
      'description': ' Show a simple list of functions / filters attached in a particular hook = wp_footer'
      'descriptionMoreURL': 'https://wordpress.stackexchange.com/questions/17394/how-to-know-what-functions-are-hooked-to-an-action-filter'
   'WP Functions in a Hook (detailed)':
  		 'prefix': 'wp__hook_getfunc_all'
  		 'body': """
           function rbtm_func_n_hook()
           {  // Shows a comprehensive result of functions/filter attached in a hook
               global $wp_filter;

               $hook_filters = array ();
               $h1  = '<h1>List of Filters / Functions</h1>';
               $out = '';
               $toc = '<ul>';

               foreach ( $wp_filter as $key => $val )
               {
                   // if ( FALSE !== strpos( $key, 'comment' ) )
                   if ( FALSE !== strpos( $key, 'after_setup_theme' ) ) // //if a hook is found
                   {
                       $hook_filters[$key][] = var_export( $val, TRUE );
                   }
               }

               foreach ( $hook_filters as $name => $arr_vals )
               {
                   $out .= "<h2 id=$name>$name</h2><pre>" . implode( "\n\n", $arr_vals ) . '</pre>';
                   $toc .= "<li><a href='#$name'>$name</a></li>";
               }

               print "$h1$toc</ul>$out";
            }
            add_action( 'wp_footer', 'rbtm_func_n_hook' );
            // IMPORTANT NOTES:  //you can use the debug bar plugin / query monitor plugin
            // var_export - is similar to var_dump() but returns the deeper value (simple format)
            // $wp_filter - global var that returns all filter hooks. Also has values of all functions attached in a hook both filter & action.
            // $wp_actions - global var that returns all actions hooks but functions attached are excluded.
  		   """
  		 'description': 'Shows a comprehensive list of functions/filter attached in a particular hook = wp_footer'
  		 'descriptionMoreURL': 'https://wordpress.stackexchange.com/questions/17394/how-to-know-what-functions-are-hooked-to-an-action-filter'
   'WP Excerpt Length':
   		 'prefix': 'wp__excerpt_len'
   		 'body': """
       function rbtm_new_excerpt_length($length) {
         return 100;
       }
       add_filter('excerpt_length', 'rbtm_new_excerpt_length');
   		   """
   		 'description': 'Change Excerpt Length in WordPress = excerpt_length'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Add Admin User':
   		 'prefix': 'wp__add_user_admin'
   		 'body': """
         function rbtm_admin_account()
          {
           $user = 'Username';
           $pass = 'Password';
           $email = 'email@domain.com';
           if (!username_exists($user)  && !email_exists($email)) {
               $user_id = wp_create_user($user, $pass, $email);
               $user = new WP_User($user_id);
               $user->set_role('administrator');
           }
          }
          add_action('init', 'rbtm_admin_account');
   		   """
   		 'description': 'If forgotten credentials, add an Admin User in WordPress instantly. Remove code afterwards = init'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Remove Welcome Admin':
   		 'prefix': 'wp__rm_action'
   		 'body': """
          function RBTM_crappy_crap(){
            remove_action('wmhook_loop_food_menu_postslist_before','wm_jetpack_food_menu_loop_section_display_menu_page', 10);
            remove_action('wmhook_loop_food_menu_postslist_before','wm_jetpack_food_menu_loop_section_display_front_page', 10);
            remove_action('welcome_panel', 'wp_welcome_panel'); // note you can Remove Welcome Panel from WP Dashboard
          }
          add_action('wp_footer', 'RBTM_crappy_crap', 10);

          //
          /*  https://www.screencast.com/t/rzNdQlJK06D - code remove_action()
           * 1. Hook must be in the same component (e.g. Non-core as shown in plugin: Query Monitor)
           *    note: all "before" hooks work but not all hooks "after", just the ones "nearer" to that hook or the farthest is 'wp_footer' hook
           *    https://www.screencast.com/t/4l1SseGXwNBM - hook functions removed
           *    https://www.screencast.com/t/oXoD29p9WY -  hook functions before removal
           */
   		   """
   		 'description': 'points in action hook sequence & the functions attached to it - & also how to remove it = wp_footer'
   		 'descriptionMoreURL': 'https://developer.wordpress.org/?s=remove_action'
   'WP Count Total Users':
   		 'prefix': 'wp__user_count_a'
   		 'body': """
         // Function to return user count
          function rbtm_user_count()
          {
           $usercount = count_users();
           $result = $usercount['total_users'];
           return $result;
          }
          // Creating a shortcode to display user count
          add_shortcode('user_count', 'rbtm_user_count');
          //add  shortcode [user_count] to your post or page
   		   """
   		 'description': 'Show Total Count Number of Registered Users in WordPress = user_count'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Exclude Category in Feeds':
   		 'prefix': 'wp__query_rss_exccat'
   		 'body': """
         function rbtm_exclude_category($query) {
             if ( $query->is_feed ) {
                 $query->set('cat', '-5, -2, -3');
             }
            return $query;
          }
          add_filter('pre_get_posts', 'rbtm_exclude_category');
   		   """
   		 'description': 'Exclude Specific Categories from RSS Feed = pre_get_posts'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Shortcode Enabled in Widget':
   		 'prefix': 'wp__widget_shortc'
   		 'body': """
         // Enable shortcodes in text widgets // check do_shortcode($content);
         add_filter('widget_text','do_shortcode');
   		   """
   		 'description': 'Enable Shortcode Execution in Text Widgets = widget_text'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Odd Even Class to Post':
   		 'prefix': 'wp__oe_class_post'
   		 'body': """
         //global $current_class;  //???
         //$current_class = 'odd'; //??? excluded from code & made modifications
         function rbtm_oddeven_post_class ( $classes ) {
            global $mycurrent_class;
            $mycurrent_class = ($mycurrent_class == 'odd') ? 'even' : 'odd';
            $classes[] = $mycurrent_class;
            return $classes;
          }
          add_filter( 'post_class' , 'rbtm_oddeven_post_class' );
   		   """
   		 'description': 'Simply adds an odd or even class to WordPress post for styling = post_class'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP File Type Support':
   		 'prefix': 'wp__file_ts'
   		 'body': """
         function rbtm_myme_types($mime_types){
            $mime_types['svg'] = 'image/svg+xml'; //Adding svg extension
            $mime_types['svgz'] = 'image/svg+xml'; //Adding svg extension
            $mime_types['psd'] = 'image/vnd.adobe.photoshop'; //Adding photoshop files
            $mime_types['doc'] = 'application/msword';

            unset( $mime_types['exe'] ); // Optional. Remove a mime type.
            return $mime_types;
          }
          add_filter('upload_mimes', 'rbtm_myme_types', 1, 1);
   		   """
   		 'description': 'Add or Remove Additional File Types support to be Uploaded in WordPress = upload_mimes'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Remove Image Link':
   		 'prefix': 'wp__rm_img_lnk'
   		 'body': """
         function rbtm_imagelink_setup() {
          //    check option.php if it has value of image_default_link_type
           $image_set = get_option( 'image_default_link_type' );
           if ($image_set !== 'none') {
               update_option('image_default_link_type', 'none');
           }
          }
          add_action('admin_init', 'rbtm_imagelink_setup', 10);
          // https://www.daddydesign.com/wordpress/how-to-change-the-default-attachment-display-settings-in-wordpress-without-a-plugin/
   		   """
   		 'description': 'Remove Default Image Links in WP Options.php (Default Attachment Display Settings) = admin_init'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP More Author Info in Post':
   		 'prefix': 'wp__add_authorinfo'
   		 'body': """
           function rbtm_author_info_box($content)
            {
            global $post;
            // Detect if it is a single post with a post author
            if (is_single() && isset($post->post_author)) {
              $display_name = get_the_author_meta('display_name', $post->post_author);
              if (empty($display_name)) {
                  $display_name = get_the_author_meta('nickname', $post->post_author);
              }
              $user_description = get_the_author_meta('user_description', $post->post_author);
              $user_website = get_the_author_meta('url', $post->post_author);
              $user_posts = get_author_posts_url(get_the_author_meta('ID', $post->post_author));
              if (! empty($display_name)) {
                  $author_details = '<p class="author_name">About ' . $display_name . '</p>';
              }
              if (! empty($user_description)) {
                  // Author avatar and bio
                  $author_details .= '<p class="author_details">' . get_avatar(get_the_author_meta('user_email'), 90) . nl2br($user_description). '</p>';
              }
              $author_details .= '<p class="author_links"><a href="'. $user_posts .'">View all posts by ' . $display_name . '</a>';
              if (! empty($user_website)) {
                  $author_details .= ' | <a href="' . $user_website .'" target="_blank" rel="nofollow">Website</a></p>';
              } else {
                  $author_details .= '</p>';
              }
              $content = $content . '<footer class="author_bio_section" >' . $author_details . '</footer>';
            }
            return $content;
            }
            // Add our function to the post content filter
            add_action('the_content', 'rbtm_author_info_box');
            // Allow HTML in author bio section
            remove_filter('pre_user_description', 'wp_filter_kses');

          /*
          .author_bio_section{
          background: none repeat scroll 0 0 #F5F5F5;
          padding: 15px;
          border: 1px solid #ccc;
          }

          .author_name{
          font-size:16px;
          font-weight: bold;
          }

          .author_details img {
          border: 1px solid #D8D8D8;
          border-radius: 50%;
          float: left;
          margin: 0 10px 10px 0;
          }
          *  add this to your CSS
          */
   		   """
   		 'description': 'Add a multi-author Info Box at the end of Posts = pre_user_description'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Disable XML-RPC':
   		 'prefix': 'wp__rm_xml-rpc'
   		 'body': """
          add_filter('xmlrpc_enabled', '__return_false');
   		   """
   		 'description': 'Disable XML-RPC in WordPress - XML-RPC is a method that allows third party apps to communicate w/ WP site remotely. A potential security issue! = xmlrpc_enabled'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Link Featured Image':
   		 'prefix': 'wp__link_img_post'
   		 'body': """
         function rbtm_autolink_featured_images($html, $post_id, $post_image_id)
          {
           if (! is_singular()) {
               $html = '<a href="' . get_permalink($post_id) . '" title="' . esc_attr(get_the_title($post_id)) . '">' . $html . '</a>';
               return $html;
           } else {
               return $html;
           }
          }
          add_filter('post_thumbnail_html', 'rbtm_autolink_featured_images', 10, 3);
   		   """
   		 'description': 'Automatically Link Featured Images to Posts = post_thumbnail_html'
   		 'descriptionMoreURL': 'http://www.wpbeginner.com/wp-tutorials/25-extremely-useful-tricks-for-the-wordpress-functions-file/'
   'WP Capable to upload Image':
  		 'prefix': 'wp__capab_upl_role'
  		 'body': """
         // check https://codex.wordpress.org/Roles_and_Capabilities
          if ( current_user_can('contributor') && !current_user_can('upload_files') )
            add_action('admin_init', 'allow_contributor_uploads');
            function allow_contributor_uploads() {
                 $contributor = get_role('contributor');
                 $contributor->add_cap('upload_files');
          }
          //to check if it works
          /* add_action('wp_footer', function() {
             $contribx = wp_get_current_user();
             echo "checkz: ";var_dump($contribx);
          }); */
  		   """
  		 'description': 'Allow Contributors Role to add the capability to upload images = admin_init'
  		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Count View of Post':
  		 'prefix': 'wp__count_view_post'
  		 'body': """
           function rbtm_count_post_visits() {
             if( is_single() ) {
                 global $post;
                 $mymetakey = 'my_post_viewed'; // The meta key to retrieve / create to keep track # of visits.
                 $views = get_post_meta( $post->ID, $mymetakey, true );
                 if( $views == '' ) {
                     update_post_meta( $post->ID, $mymetakey, '1' ); // add key if doesn't exist
                 } else {
                     $views_no = intval( $views );
                     update_post_meta( $post->ID, $mymetakey, ++$views_no ); // increment the count
                 }
             }
            }
            add_action( 'wp_head', 'rbtm_count_post_visits' );

             /* // add this to any template files to know the most viewed post
            $myarg = array(
            'posts_per_page' => 3,
            'meta_key' => 'my_post_viewed',
            'orderby' => 'meta_value_num', // https://codex.wordpress.org/Class_Reference/WP_Query
            'order'=> 'DESC'
            );
            $myloop = new WP_Query($myarg);
            while ($myloop->have_posts()):
            $myloop->the_post();
            // Loop continues
            endwhile;
            wp_reset_query(); */

  		   """
  		 'description': 'Show Popular or Most Viewed Posts by adding a custom meta data to count views = wp_head'
  		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Security Malicious Requests':
   		 'prefix': 'wp__secur_site'
   		 'body': """
           global $user_ID; if($user_ID) {
           if(!current_user_can('administrator')) {
               if (strlen($_SERVER['REQUEST_URI']) > 255 ||
                   stripos($_SERVER['REQUEST_URI'], "eval(") ||
                   stripos($_SERVER['REQUEST_URI'], "CONCAT") ||
                   stripos($_SERVER['REQUEST_URI'], "UNION+SELECT") ||
                   stripos($_SERVER['REQUEST_URI'], "base64")) {
                       @header("HTTP/1.1 414 Request-URI Too Long");
                       @header("Status: 414 Request-URI Too Long");
                       @header("Connection: Close");
                       @exit;
               }
             }
            }
   		   """
   		 'description': 'Protect Your Site from Malicious Requests'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Add Pagination':
   		 'prefix': 'wp__paginate_pg'
   		 'body': """
          global $wp_query;
          $total = $wp_query->max_num_pages;
          // only bother with the rest if we have more than 1 page!
          if ( $total > 1 )  {
            // get the current page
            if ( !$current_page = get_query_var('paged') )
                 $current_page = 1;
            // structure of "format" depends on whether we're using pretty permalinks
            $format = empty( get_option('permalink_structure') ) ? '&page=%#%' : 'page/%#%/';
            echo paginate_links(array(
                 'base' => get_pagenum_link(1) . '%_%',
                 'format' => $format,
                 'current' => $current_page,
                 'total' => $total,
                 'mid_size' => 4,
                 'type' => 'list'
            ));
          }
   		   """
   		 'description': 'Paginate Your Site Without Plugins'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Disable Admin Bar':
   		 'prefix': 'wp__rm_bar_admin'
   		 'body': """
          // Remove the admin bar from the front end
          add_filter( 'show_admin_bar', '__return_false' );
   		   """
   		 'description': 'Disable the Admin Bar if you find no use for it'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Show Thumbnails Post Feeds':
   		 'prefix': 'wp__rss_thumb'
   		 'body': """
          // Put post thumbnails into rss feed
          function rbtm_feed_post_thumbnail($content)
          {
           global $post;
           if (has_post_thumbnail($post->ID)) {
               $content = '' . $content; //??? - not sure
               // $content = get_the_post_thumbnail() . $content; //my code to add thumbnail
           }
           return $content;
          }
          add_filter('the_excerpt_rss', 'rbtm_feed_post_thumbnail');
          add_filter('the_content_feed', 'rbtm_feed_post_thumbnail');
   		   """
   		 'description': 'Show Post Thumbnails in RSS Feed = the_excerpt_rss & the_content_feed'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Change Author Permalink':
   		 'prefix': 'wp__perma_au'
   		 'body': """
         function cng_author_base() {
           global $wp_rewrite;
           $author_slug = 'profile'; // change slug name
           $wp_rewrite->author_base = $author_slug;
          }
          add_action('init', 'cng_author_base');
   		   """
   		 'description': 'Change the Author Permalink Structure = init'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Twitter Link Username':
   		 'prefix': 'wp__twit_lnk_user'
   		 'body': """

          function content_twitter_mention($content) {
             return preg_replace('/([^a-zA-Z0-9-_&])@([0-9a-zA-Z_]+)/', "\\$1<a href=/\"http://twitter.com/\\$2/\" target=/\"_blank/\" rel=/\"nofollow/\">@\\$2</a>", $content);
             // just replace  "/\" with "\" on the 2nd argument to make it work
          }
          add_filter('the_content', 'content_twitter_mention');
          add_filter('comment_text', 'content_twitter_mention');

   		   """
   		 'description': 'Auto Link to Twitter Usernames in Content = the_content & comment_text'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP PayPal Donation Shortcode':
   		 'prefix': 'wp__paypal_shortc'
   		 'body': """
         function donate_shortcode($atts, $content = null)
         {
             global $post;
             $myemail = "example1@gmail.com";
             extract(shortcode_atts(array(
                 // 'account' => 'your-paypal-email-address',
                 'account' => $myemail,
                 'for' => $post->post_title,
                 'onHover' => '',
             ), $atts));
             if (empty($content)) {
                 $content='Make A Donation';
             }
             return '<a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business='.$account.'&item_name=Donation for '.$for.'" target="_blank" title="'.$onHover.'">'.$content.'</a>';
         }
         add_shortcode('donate', 'donate_shortcode');
   		   """
   		 'description': 'Create a PayPal Donation Shortcode'
   		 'descriptionMoreURL': 'https://themeisle.com/blog/code-snippets-for-wordpress/'
   'WP Change Template':
   		 'prefix': 'wp__tpl_switch'
   		 'body': """
           add_action( 'wp', 'rbtm_switch_template', 3 );
           function rbtm_switch_template(){
               if ( is_page_template( '_fullwidth.php' ) ) {
                 if( true ) // put condition here
                  locate_template( array( 'some-other-template.php' ), true );
                 else
                  return;
                 }
               else
                   return;
           }
   		   """
   		 'description': 'Change or switch to another template if a condition is met = wp'
   		 'descriptionMoreURL': 'https://wordpress.stackexchange.com/questions/62591/what-filter-or-action-hook-to-use-in-order-to-load-some-code-before-the-template'
  	'WP Query Post Meta Event':
  		 'prefix': 'wp__query_postmeta_e'
  		 'body': """

            function be_event_query( $query ) {

            	if( $query->is_main_query() && !$query->is_feed() && !is_admin() && $query->is_post_type_archive( 'event' ) ) {
            		$meta_query = array(
            			array(
            				'key' => 'be_events_manager_end_date',
            				'value' => time(),
            				'compare' => '>'
            			)
            		);
            		$query->set( 'meta_query', $meta_query );
            		$query->set( 'orderby', 'meta_value_num' );
            		$query->set( 'meta_key', 'be_events_manager_start_date' );
            		$query->set( 'order', 'ASC' );
            		$query->set( 'posts_per_page', '4' );
            	}
            }
            add_action( 'pre_get_posts', 'be_event_query' );

  		   """
  		 'description': 'Customize Event Query using Post Meta = pre_get_posts'
  		 'descriptionMoreURL': 'https://www.billerickson.net/customize-the-wordpress-query/'
  	'WP Query Main & Category CPT':
  		 'prefix': 'wp__query_cpt'
  		 'body': """

            function func_query_cpt( $query ) {
               if ( is_home() && $query->is_main_query() ) {

                 $query->set( 'post_type', array( 'post', 'my_custom_post_type') );
                 return $query;

               }
             //or include in category
              if ( is_category('category-slug') && $query->is_main_query() ) {

                 $query->set( 'post_type', 'my_custom_post_type' );
                 return $query;

               }
            }
            add_action( 'pre_get_posts', 'func_query_cpt' );

  		   """
  		 'description': 'Include Custom Post Types On Your Main Blog Page & also Specific Category Archive Page = pre_get_posts'
  		 'descriptionMoreURL': 'https://premium.wpmudev.org/blog/creating-custom-queries-wordpress/'
  	'WP Query basic loop':
  		 'prefix': 'wp__query_loop_basic'
  		 'body': """
          //https://digwp.com/2011/09/3-ways-to-reset-the-wordpress-loop/
          if  ( is_front_page() && is_main_query()) {

            $args = array(
                'post_type' => 'post',
            );
            // the query
            $query = new WP_Query( $args );

            // The Loop
            if ( $query->have_posts() ) :
              while ( $query->have_posts() ) : $query->the_post();
            	// contents of the Loop go here

              endwhile;
              wp_reset_postdata(); /* Restore original Post Data */
            endif;
          }

  		   """
  		 'description': 'WP_Query Basic Loop'
  		 'descriptionMoreURL': 'https://premium.wpmudev.org/blog/creating-custom-queries-wordpress/'
  	'WP Query Nested Loop':
  		 'prefix': 'wp__query_loop_nested'
  		 'body': """
                 //https://digwp.com/2011/09/3-ways-to-reset-the-wordpress-loop/
              $args = array(
                'post_type' => 'my_cpt',
            );
            // the query
            $query = new WP_Query( $args );
            // The Loop
            if ( $query->have_posts() ) :
              while ( $query->have_posts() ) : $query->the_post();
                  // Some code here...
            	    // another relation   WP Query (taxonomy)
                      $term_taxonomy_id = get_post_meta(get_the_ID(), 'course_pack', true)['term_taxonomy_id'];
                      $args = array(
                        'tax_query' => array(
                          array(
                            'terms'=>array($term_taxonomy_id),
                          ),
                        ),
                      );
                      // the query
                      $subquery = new WP_Query( $args );
                      // The Loop
                      if ( $subquery->have_posts() ) :
                        while ( $subquery->have_posts() ) : $subquery->the_post();
                          // Some code here...

                        endwhile;
                        $subquery->reset_postdata(); /* Restore original Post Data */
                      endif;
                // Some code here...
              endwhile;
              wp_reset_postdata(); /* Restore original Post Data */
            endif;
  		   """
  		 'description': 'WP_Query Nested Loop'
  		 'descriptionMoreURL': 'https://wordpress.stackexchange.com/questions/126346/resetting-post-data-to-previous-loop-in-nested-loops'
  	'WP Query Get Pages':
  		 'prefix': 'wp__query_get_pages'
  		 'body': """

            <?php
            $args = array(
             'parent' => 0,
             'sort_order' => 'ASC',
             'sort_column' => 'post_title',
            );
            // get posts
            $pages = get_pages( $args );
            // check if any posts are returned
            if ( $pages ) { ?>
             <ul class="sidebar-pages">

             <?php foreach ( $pages as $page ) { ?>
             <li>
             <a href="<?php echo get_page_link( $page->ID ); ?>">
             <?php echo $page->post_title; ?>
             </a>
             </li>
             <?php } ?>

             </ul>
            <?php } ?>
  		   """
  		 'description': 'Display pages only similar to WP_Query'
  		 'descriptionMoreURL': 'https://premium.wpmudev.org/blog/creating-custom-queries-wordpress/'
  	'WP Query Get Posts':
  		 'prefix': 'wp__query_get_posts'
  		 'body': """

            <?php
            $args = array(
             'posts_per_page' => '4',
             'exclude' => array( $post->ID )
            );
            // get posts
            $posts = get_posts( $args );
            // check if any posts are returned
            if ( $posts ) { ?>
             <section class="recent-posts clear">
             <?php foreach ($posts as $post ) { ?>

               <?php setup_postdata( $post ); ?>
               <article id="post-<?php the_ID(); ?>" <?php post_class( 'left' ); ?>>
                 <a href="<?php the_permalink(); ?>" title="<?php the_title_attribute(); ?>">
                 <?php post_thumbnail( 'thumbnail' );?>
                 </a>
                 <a href="<?php the_permalink(); ?>" title="<?php the_title_attribute(); ?>">
                 <?php the_title(); ?>
                 </a>
               </article>

             <?php } ?>
             </section>

            <?php }
            wp_reset_postdata(); /* Restore original Post Data */
            ?>

  		   """
  		 'description': 'Display post only similar to WP_Query'
  		 'descriptionMoreURL': 'https://premium.wpmudev.org/blog/creating-custom-queries-wordpress/'
  	'WP Meta Query Nested':
  		 'prefix': 'wp__query_meta_arg'
  		 'body': """
         //https://developer.wordpress.org/reference/classes/wp_query/#methods-and-properties
         //if(('size'=='xl' && 'color'=='green') || ('size' < 100 && 'size' > 50)) {}
          $args = array(
             'post_type' => 'post',
             'posts_per_page' => '3',
             'meta_key' => 'key',
             'meta_value' => 'value',
             'meta_value_num' => 10,
             'posts_per_page' => '3',
             'meta_compare' => '=',
             'meta_query' => array(
                  'relation' => 'OR', //default &&
                  array(
                    'relation' => 'AND', //default &&
                    array(
                      'key'=>'size',
                      'value'=>'xl',
                      'type'=>'CHAR',
                      'compare'=>'=',
                    ),
                    array(
                      'key'=>'color',
                      'value'=>'green',
                      'type'=>'CHAR',
                      'compare'=>'=',
                    ),
                  ),
                  array(
                    'key'=>'size',
                    'value'=> array(50,100),
                    'type'=>'NUMERIC',
                    'compare'=>'BETWEEN',
                  )
              ),

            );
  		   """
  		 'description': 'Meta Query Nested Argument Sample 1'
  		 'descriptionMoreURL': 'https://www.youtube.com/watch?v=v8IkotRDg4Q&index=5&list=PLUBR53Dw-Ef8RvXF4iEU6UnhOlrcfIYn6'
  	'WP Query Taxonomy':
  		 'prefix': 'wp__query_tax_arg'
  		 'body': """
          //https://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters
          $args = array(
              'post_type' => 'post',
              'posts_per_page' => -1,
              'tax_query' => array(
                  'relation' => 'OR', //default &&
                  array(
                    'taxonomy'=>'genre',
                    'field'=> 'term_id',
                    'terms'=>array(33,35),
                    'include_children'=>true,
                    'operator'=>'NOT IN',
                  ),
                  array(
                    'taxonomy'=>'category',
                    'field'=> 'slug',
                    'terms'=>array('ruby','joomla','drupal'),
                    'include_children'=>true,
                    'operator'=>'AND',
                  )
              ),
            );
  		   """
  		 'description': 'Tax Query (Taxonomy) Argument Sample'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Post & Page ':
  		 'prefix': 'wp__query_post_page_arg'
  		 'body': """
          $args = array(
          		'p' => 1,                               //(int) - use post id.
          		'name' => 'hello-world',                //(string) - use post slug.
          		'page_id' => 1,                         //(int) - use page id.
          		'pagename' => 'sample-page',            //(string) - use page slug.
          		'pagename' => 'contact_us/canada',      //(string) - Display child page using the slug of the parent and the child page, separated ba slash
          		'post_parent' => 1,                     //(int) - use page id. Return just the child Pages. (Only works with heirachical post types.)
          		'post_parent__in' => array(1,2,3),       //(array) - use post ids. Specify posts whose parent is in an array. NOTE: Introduced in 3.6
          		'post_parent__not_in' => array(1,2,3),  //(array) - use post ids. Specify posts whose parent is not in an array.
          		'post__in' => array(1,2,3),             //(array) - use post ids. Specify posts to retrieve. ATTENTION If you use sticky posts, they will be included (prepended!) in the posts you retrieve whether you want it or not. To suppress this behaviour use ignore_sticky_posts
          		'post__not_in' => array(1,2,3),         //(array) - use post ids. Specify post NOT to retrieve.
            );
  		   """
  		 'description': 'Post & Page Parameters or Argument - Display content based on post and page parameters'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Tag Argument ':
  		 'prefix': 'wp__query_tag_arg'
  		 'body': """
            $args = array(
            	'tag' => 'cooking',                       //(string) - use tag slug.
            	'tag_id' => 5,                            //(int) - use tag id.
            	'tag__and' => array( 2, 6),               //(array) - use tag ids.
            	'tag__in' => array( 2, 6),                //(array) - use tag ids.
            	'tag__not_in' => array( 2, 6),            //(array) - use tag ids.
            	'tag_slug__and' => array( 'red', 'blue'), //(array) - use tag slugs.
            	'tag_slug__in' => array( 'red', 'blue'),  //(array) - use tag slugs.
            );
  		   """
  		 'description': 'Tag Parameters - Show posts associated with certain tags'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Category Arg ':
  		 'prefix': 'wp__query_cat_arg'
  		 'body': """
          $args = array(
            'cat' => 5,//(int) - use category id.
            'category_name' => 'staff, news',          //(string) - Display posts that have these categories, using category slug.
            'category_name' => 'staff+news',           //(string) - Display posts that have "all" of these categories, using category slug.
            'category__and' => array( 2, 6 ),         //(array) - use category id.
            'category__in' => array( 2, 6 ),          //(array) - use category id.
            'category__not_in' => array( 2, 6 ),      //(array) - use category id.
          );
  		   """
  		 'description': 'Category Parameters - Show posts associated with certain categories'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Author Arg ':
  		 'prefix': 'wp__query_author_arg'
  		 'body': """
            $args = array(
            	'author' => '1,2,3,',                      //(int) - use author id [use minus (-) to exclude authors by ID ex. 'author' => '-1,-2,-3,']
            	'author_name' => 'luetkemj',              //(string) - use 'user_nicename' (NOT name)
            	'author__in' => array( 2, 6 ),            //(array) - use author id (available with Version 3.7).
            	'author__not_in' => array( 2, 6 ),        //(array)' - use author id (available with Version 3.7).
            );
  		   """
  		 'description': 'Author Parameters - Show posts associated with certain author'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Post & Status Arg ':
  		 'prefix': 'wp__query_post_stat_arg'
  		 'body': """
          $args = array(
          	'post_type' => array(                   //(string / array) - use post types. Retrieves posts by Post Types, default value is 'post';
          					'post',                         // - a post.
          					'page',                         // - a page.
          					'revision',                     // - a revision.
          					'attachment',                   // - an attachment. The default WP_Query sets 'post_status'=>'published', but atchments default to 'post_status'=>'inherit' so you'll need to set the status to 'inherit' or 'any'.
          					'my-post-type',                 // - Custom Post Types (e.g. movies)
          					),
          	'post_status' => array(                 //(string / array) - use post status. Retrieves posts by Post Status, default value i'publish'.
                    'publish',                      // - a published post or page.
                    'pending',                      // - post is pending review.
                    'draft',                        // - a post in draft status.
                    'auto-draft',                   // - a newly created post, with no content.
                    'future',                       // - a post to publish in the future.
                    'private',                      // - not visible to users who are not logged in.
                    'inherit',                      // - a revision. see get_children.
                    'trash'                         // - post is in trashbin (available with Version 2.9).
                    ),
          );
  		   """
  		 'description': 'Type & Status Parameters - Show posts associated with certain type or status'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Pagination Arg ':
  		 'prefix': 'wp__query_pagin_arg'
  		 'body': """
            $args = array(
            	'posts_per_page' => 10,                 //(int) - number of post to show per page (available with Version 2.1). Use 'posts_per_page'=1 to show all posts (the 'offset' parameter is ignored with a -1 value). Note if the query is in a feed, wordpress overwrites this parameter with the stored 'posts_per_rss' option. Treimpose the limit, try using the 'post_limits' filter, or filter 'pre_option_posts_per_rss' and return -1
            	'posts_per_archive_page' => 10,         //(int) - number of posts to show per page - on archive pages only. Over-rides showposts anposts_per_page on pages where is_archive() or is_search() would be true
            	'nopaging' => false,                    //(bool) - show all posts or use pagination. Default value is 'false', use paging.
            	'paged' => get_query_var('paged'),      //(int) - number of page. Show the posts that would normally show up just on page X when usinthe "Older Entries" link.
            																					//NOTE: Use get_query_var('page'); if you want your query to work in a Page template that you've set as your static front page. The query variable 'page' holds the pagenumber for a single paginated Post or Page that includes the <!--nextpage--> Quicktag in the post content.
            																					// This whole paging thing gets tricky. Some links to help you out:
            																					// http://codex.wordpress.org/Function_Reference/next_posts_link#Usage_when_querying_the_loop_with_WP_Query
            																					// http://codex.wordpress.org/Pagination#Troubleshooting_Broken_Pagination
            	'offset' => 3,                          // (int) - number of post to displace or pass over.
            																					// Warning: Setting the offset parameter overrides/ignores the paged parameter and breaks pagination. for a workaround see: http://codex.wordpress.org/Making_Custom_Queries_using_Offset_and_Pagination
            																					// The 'offset' parameter is ignored when 'posts_per_page'=>-1 (show all posts) is used.
            	'page' => get_query_var('page'),        // (int) - number of page for a static front page. Show the posts that would normally show up just on page X of a Static Front Page.
            																					//NOTE: The query variable 'page' holds the pagenumber for a single paginated Post or Page that includes the <!--nextpage--> Quicktag in the post content.
            	'ignore_sticky_posts' => false,         // (boolean) - ignore sticky posts or not (available with Version 3.1, replaced caller_get_posts parameter). Default value is 0 - don't ignore sticky posts. Note: ignore/exclude sticky posts being included at the beginning of posts returned, but the sticky post will still be returned in the natural order of that list of posts returned.
            );
  		   """
  		 'description': 'WP Query Pagination Parameters'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Orderby Arg ':
  		 'prefix': 'wp__query_order_arg'
  		 'body': """
            $args = array(
            	'order' => 'DESC',                      //(string) - Designates the ascending or descending order of the 'orderby' parameter. Default to 'DESC'.
            																						//Possible Values:
            																						//'ASC' - ascending order from lowest to highest values (1, 2, 3; a, b, c).
            																						//'DESC' - descending order from highest to lowest values (3, 2, 1; c, b, a).
            	'orderby' => 'date',                    //(string) - Sort retrieved posts by parameter. Defaults to 'date'. One or more options can be passed. EX: 'orderby' => 'menu_order title'
            																						//Possible Values:
            																						//'none' - No order (available with Version 2.8).
            																						//'ID' - Order by post id. Note the captialization.
            																						//'author' - Order by author.
            																						//'title' - Order by title.
            																						//'name' - Order by post name (post slug).
            																						//'date' - Order by date.
            																						//'modified' - Order by last modified date.
            																						//'parent' - Order by post/page parent id.
            																						//'rand' - Random order.
            																						//'comment_count' - Order by number of comments (available with Version 2.9).
            																						//'menu_order' - Order by Page Order. Used most often for Pages (Order field in the EdiPage Attributes box) and for Attachments (the integer fields in the Insert / Upload MediGallery dialog), but could be used for any post type with distinct 'menu_order' values (theall default to 0).
            																						//'meta_value' - Note that a 'meta_key=keyname' must also be present in the query. Note alsthat the sorting will be alphabetical which is fine for strings (i.e. words), but can bunexpected for numbers (e.g. 1, 3, 34, 4, 56, 6, etc, rather than 1, 3, 4, 6, 34, 56 as yomight naturally expect).
            																						//'meta_value_num' - Order by numeric meta value (available with Version 2.8). Also notthat a 'meta_key=keyname' must also be present in the query. This value allows for numericasorting as noted above in 'meta_value'.
            																						//'title menu_order' - Order by both menu_order AND title at the same time. For more info see: http://wordpress.stackexchange.com/questions/2969/order-by-menu-order-and-title
            																						//'post__in' - Preserve post ID order given in the post__in array (available with Version 3.5).
            );
  		   """
  		 'description': 'WP Query Order & Orderby Parameters - Sort retrieved posts'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Query Date Arg ':
  		 'prefix': 'wp__query_date_arg'
  		 'body': """
            $args = array(
            	'year' => 2014,                         //(int) - 4 digit year (e.g. 2011).
            	'monthnum' => 4,                        //(int) - Month number (from 1 to 12).
            	'w' =>  25,                             //(int) - Week of the year (from 0 to 53). Uses the MySQL WEEK command. The mode is dependenon the "start_of_week" option.
            	'day' => 17,                            //(int) - Day of the month (from 1 to 31).
            	'hour' => 13,                           //(int) - Hour (from 0 to 23).
            	'minute' => 19,                         //(int) - Minute (from 0 to 60).
            	'second' => 30,                         //(int) - Second (0 to 60).
            	'm' => 201404,                          //(int) - YearMonth (For e.g.: 201307).
            	'date_query' => array(                  //(array) - Date parameters (available with Version 3.7).
            																						//these are super powerful. check out the codex for more comprehensive code examples http://codex.wordpress.org/Class_Reference/WP_Query#Date_Parameters
            		array(
            			'year' => 2014,                     //(int) - 4 digit year (e.g. 2011).
            			'month' => 4,                        //(int) - Month number (from 1 to 12).
            			'week' => 31,                        //(int) - Week of the year (from 0 to 53).
            			'day' => 5,                          //(int) - Day of the month (from 1 to 31).
            			'hour' => 2,                         //(int) - Hour (from 0 to 23).
            			'minute' => 3,                       //(int) - Minute (from 0 to 59).
            			'second' => 36,                      //(int) - Second (0 to 59).
            			'after'     => 'January 1st, 2013', //(string/array) - Date to retrieve posts after. Accepts strtotime()-compatible string, or array of 'year', 'month', 'day'
            			'before'    => array(               //(string/array) - Date to retrieve posts after. Accepts strtotime()-compatible string, or array of 'year', 'month', 'day'
            				'year'  => 2013,                  //(string) Accepts any four-digit year. Default is empty.
            				'month' => 2,                     //(string) The month of the year. Accepts numbers 1-12. Default: 12.
            				'day'   => 28,                    //(string) The day of the month. Accepts numbers 1-31. Default: last day of month.
            			),
            			'inclusive' => true,                //(boolean) - For after/before, whether exact value should be matched or not'.
            			'compare' =>  '=',                  //(string) - Possible values are '=', '!=', '>', '>=', '<', '<=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN', 'EXISTS' (only in WP >= 3.5), and 'NOT EXISTS' (also only in WP >= 3.5). Default value is '='
            			'column' => 'post_date',            //(string) - Column to query against. Default: 'post_date'.
            			'relation' => 'AND',                //(string) - OR or AND, how the sub-arrays should be compared. Default: AND.
            		),
            	),
            );
  		   """
  		 'description': 'WP Query Date Parameters - Show posts associated with a certain time and date period'
  		 'descriptionMoreURL': 'https://www.billerickson.net/code/wp_query-arguments/'
  	'WP Add Classes Body ':
  		 'prefix': 'wp__body_class'
  		 'body': """
            function RBTM_body_classes($classes) {
              // Adds a class whether a sidebar is in uses
                if (is_active_sidebar( 'sidebar') || is_active_sidebar('frontpage') || is_active_sidebar('footer')) {
                  $classes[] = 'has-sidebar';
                } else {
                  $classes[] = 'no-sidebar';
                }
                return $classes;
            }
            add_filter( 'body_class', 'RBTM_body_classes' );
  		   """
  		 'description': 'Adds class to Body Tag = body_class'
  		 'descriptionMoreURL': 'https://developer.wordpress.org/reference/hooks/body_class/'
  	'WP Add Classes Nav Menu ':
  		 'prefix': 'wp__nav_menu_class'
  		 'body': """
            // add class for each nav link & change href when pages switch from frontpage to any
            function add_specific_menu_location_atts( $atts, $item, $args, $depth ) {
            //  var_dump( basename(get_permalink()));
                if( $args->theme_location == 'primary' ) {
                  $atts['class'] = 'menu-link-class';
                }
                  // change nav links when not in frontpage for smooth scrolling
                if(!is_front_page() && $args->theme_location == 'primary')   {
                  switch ($atts['href']) {
                      case '#top':
                          $atts['href'] = get_home_url();
                          break;
                      case '#services':
                          $atts['href'] = get_home_url().'#services';
                          break;
                      case '#about-menu':
                          $atts['href'] = get_home_url().'#about-menu';
                          break;
                      default:
                          break;
                  }
                }
                return $atts;
            }
            add_filter( 'nav_menu_link_attributes', 'add_specific_menu_location_atts', 10, 4 );
  		   """
  		 'description': 'Adds class to Menu Navigation Tag = body_class'
  		 'descriptionMoreURL': 'https://developer.wordpress.org/reference/hooks/nav_menu_link_attributes/'
  	'WP Widget Function ':
  		 'prefix': 'wp__widg_func'
  		 'body': """
              // Function Reference/the widget
               /* {widgets classname} - default classname is given if not set */
           $args = array(
             'before_widget' => '<div id="myidz" class="widget myclazz {widget classname} ">',
             'after_widget' => '</div>',
             'before_title' => '<h2 class="myclass widgettitle">',
             'after_title' => '</h2>'
           );
           $instance1 = array(
             'title' => 'My Tagtitle',
             'taxonomy'  => 'nova_menu_item_label', //default: 'post_tag', 'category' also works
           );
            the_widget( 'WP_Widget_Tag_Cloud', $instance1, $args);

             $instance2 = array(
             'title' => 'My Texttitle',
             'text'  => '</i>My Text Content</i><small>hello</small>',
           );
            the_widget( 'WP_Widget_Text', $instance2, $args);
  		   """
  		 'description': 'template tag displays an arbitrary widget outside of a sidebar. It can be used anywhere in templates.'
  		 'descriptionMoreURL': 'https://codex.wordpress.org/Function_Reference/the_widget#Categories_widget'
  	'WP Widget Meta Login':
  		 'prefix': 'wp__widg_login'
  		 'body': """
            <ul>
              <?php
            // $getusers = get_users(array('count_total'  => false ));
             $now_user = wp_get_current_user();
             // $userdata = get_userdata(3);
             // $getuserby = get_user_by('ID', '3');
             // $getbypath = get_permalink(get_page_by_path($slug));
              ?>
                <?php if (is_user_logged_in()) { ?>
                <li><a href="#">Hi! <?php echo strtoupper($now_user->data->display_name); ?></a></li>
                <li><a href="<?php echo wp_logout_url(get_permalink()); ?>">Logout</a></li>
                <?php
                    } else {  ?>
                  <li><a href="<?php echo wp_login_url(home_url()); ?>" title="Login">Login</a></li>
                  <?php } ?>
                    <li><a href="<?php echo get_site_url().'/feed'; ?>" title="Entries RSS">Entries RSS</a></li>
                    <li><a href="<?php echo get_site_url().'/comments/feed';?>" title="Comments RSS">Comments RSS</a></li>
                    <li><a href="<?php echo get_site_url(); ?>" title="Visit">Visit Us</a></li>
            </ul>
  		   """
  		 'description': 'Widget Meta Login for User '
  	'WP Widget Taxonomy ':
       'prefix': 'wp__widg_taxo'
       'body': """
            $args = array(
               'taxonomy' => 'category', //empty string(''), false, 0 don't work, and return empty array
                'orderby' => 'name',
                'order' => 'ASC',
                'hide_empty' => true, //can be 1, '1' too
                'include' => 'all', //empty string(''), false, 0 don't work, and return empty array
                'exclude' => 'all', //empty string(''), false, 0 don't work, and return empty array
                'exclude_tree' => 'all', //empty string(''), false, 0 don't work, and return empty array
                'number' => false, //can be 0, '0', '' too
                'offset' => '',
                'fields' => 'all',
                'name' => '',
                'slug' => '',
                'hierarchical' => true, //can be 1, '1' too
                'search' => '',
                'name__like' => '',
                'description__like' => '',
                'pad_counts' => false, //can be 0, '0', '' too
                'get' => '',
                'child_of' => false, //can be 0, '0', '' too
                'childless' => false,
                'cache_domain' => 'core',
                'update_term_meta_cache' => true, //can be 1, '1' too
                'meta_query' => '',
                'meta_key' => array(),
                'meta_value'=> '',
                );
            $terms = get_terms($args);
            //print_r($terms);
            if (! empty($terms) && ! is_wp_error($terms)) {
                $count = count($terms);
                $i = 0;
                $term_list = '<p class="my_term-archive">';
                foreach ($terms as $term) {
                    $i++;
                    $term_list .= '<a href="' . esc_url(get_term_link($term)) . '" alt="' . esc_attr(sprintf(__('View all post filed under %s', 'my_localization_domain'), $term->name)) . '"> '. $term->name .' </a><span> ('.$term->count.') </span>';
                    if ($count != $i) {
                        $term_list .= ' &middot; ';
                    } else {
                        $term_list .= '</p>';
                    }
                }
                echo $term_list;
            }
         """
       'description': 'Widget to display taxonomy'
       'descriptionMoreURL': 'https://developer.wordpress.org/reference/functions/get_terms/'
  	'WP Widget Archive ':
       'prefix': 'wp__widg_archive'
       'body': """
            $args = array(
                'type'            => 'monthly',
                'limit'           => '',
                'format'          => 'html',
                'before'          => '',
                'after'           => '',
                'show_post_count' => false,
                'echo'            => 1,
                'order'           => 'DESC'
            );
            wp_get_archives( $args );
         """
       'description': 'Widget to display archive'
       'descriptionMoreURL': 'https://developer.wordpress.org/reference/functions/wp_get_archives/'
  	'WP Widget Recent Post ':
       'prefix': 'wp__widg_rec_post'
       'body': """
            <ul>
            <?php
            $defaults = array(
                'numberposts' => 10, 'offset' => 0,
                'category' => 0, 'orderby' => 'post_date',
                'order' => 'DESC', 'include' => '',
                'exclude' => '', 'meta_key' => '',
                'meta_value' =>'', 'post_type' => 'post', 'post_status' => 'draft, publish, future, pending, private',
                'suppress_filters' => true
            );
                $recent_posts = wp_get_recent_posts( $defaults );
                foreach( $recent_posts as $recent ){
                    printf( '<li><a href="%1$s">%2$s</a></li>',
                         esc_url( get_permalink( $recent['ID'] ) ),
                         apply_filters( 'the_title', $recent['post_title'], $recent['ID'] )
                     );
                } wp_reset_query();
            ?>
            </ul>
         """
       'description': 'Widget to display recent post'
       'descriptionMoreURL': 'https://developer.wordpress.org/reference/functions/wp_get_recent_posts/'
  	'WP Pods Query ':
       'prefix': 'wp_pods_query_1'
       'body': """
            <?php
             $arg= array(
                  'nova_menu.term_id != 264',
                  'nova_menu.term_id != 210',
                  'nova_menu.term_id != 208',
                  'nova_menu_item_label.term_id = 211',
                  't.post_status = "publish"'
              );
              $params = array(
                  'limit' => 30,
                  'where' => $arg,
                  //'and' =>  't.post_status = "publish"',
                  'orderby' => 'post_date DESC',
              );
              $mypod = pods( 'nova_menu_item' )->find( $params );
              $frag = "<ul>";
              // Loop through the records returned
              while ( $mypod->fetch() ) {
                  $frag .= '<li><a href="'.esc_url($mypod->display('guid')).'">'.$mypod->display( 'post_title' ).'</a></li>';
              }
              $frag .="</ul>";
              echo $frag;
            ?>
         """
       'description': 'WP Plugin: Pods Sample Query with Argument'
       'descriptionMoreURL': 'https://pods.io/docs/code/pods/find/'
  	'Emmet Syntax':
       'prefix': 'emmet__syntax'
       'body': """
          	#myid.wrap.myclass[title="titlename"]>ul>(li#myid$$>span.style>a[href="#"]{mytext$$})*3+br
            <!--ctrl+e-->
         """
       'description': 'Emmet Syntax Example'
       'descriptionMoreURL': 'https://designshack.net/articles/css/7-awesome-emmet-html-time-saving-tips/'
  	'CF7 Attributes':
       'prefix': 'wp__cf7_attrib'
       'body': """
            add_filter( 'wpcf7_form_elements', 'imp_wpcf7_form_elements' );
            function imp_wpcf7_form_elements( $content ) {
                $str_pos = strpos( $content, 'name="inique-name"' );
                $content = substr_replace( $content, ' data-attr="custom" data-msg="Текст 1" ', $str_pos, 0 );
                return $content;
            }
         """
       'description': 'Contact Form 7 Custom Attributes'
       'descriptionMoreURL': 'https://stackoverflow.com/questions/46274317/how-to-add-a-custom-attribute'
   'WP Get Template Part Shortcode':
   		 'prefix': 'wp__gettpl_shortc'
   		 'body': """
            // [rbtm_brizy foo="myfoo-value"]
            function rbtmbrizy_func( $atts ) {
            	$a = shortcode_atts( array(
            		'foo' => 'default foo',
            		'bar' => 'default bar',
            	), $atts );
            //	return "foo = {$a['foo']}";
                    ob_start();
                    get_template_part( 'template-parts/content', 'chef' );
                    $output = ob_get_clean();
                    return $output;
            }
            add_shortcode( 'rbtm_brizy', 'rbtmbrizy_func' );
   		   """
   		 'description': 'Display a template part using short code. It works well with Brizy & Elementor – Page Builder'
   		 'descriptionMoreURL': 'https://wordpress.stackexchange.com/questions/213705/combining-shortcode-and-get-template-part'
   'Script Window X/Y Coord':
   		 'prefix': 'scr__get_xy'
   		 'body': """
            window.addEventListener("scroll", function(event) {
                var top = this.scrollY,
                    left =this.scrollX;
            }, false);
   		   """
   		 'description': 'JavaScript get window X/Y position for scroll'
   		 'descriptionMoreURL': 'https://stackoverflow.com/questions/3464876/javascript-get-window-x-y-position-for-scroll'
   'custom var_dump':
   		 'prefix': 'wp__vardump'
   		 'body': """
              echo '<pre>rbtm dump: ';
              var_dump($atts);
              echo '</pre>';
              die();
   		   """
   		 'description': 'Custom vardump'
